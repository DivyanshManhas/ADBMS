----------- Experiment 03: (EASY) -------------

USE Exp3;

CREATE TABLE Tbl_Employee(
	ID int,
	Name varchar(20)
);

INSERT INTO Tbl_Employee VALUES
(1, 'a'),
(1, 'b'),
(2, 'a'),
(3, 'b'),
(3, 'a'),
(4, 'b'),
(4, 'a'),
(5, 'b'),
(5, 'a'),
(6, 'b'),
(7, 'a'),
(8, 'b'),
(8, 'a'),
(9, 'b'),
(9, 'a');


-- SELECT MAX ID excluding duplicates

SELECT MAX(ID) AS 'MAX' FROM (SELECT ID FROM Tbl_Employee GROUP BY ID HAVING COUNT(ID) = 1) AS f; -- SubQurey in From

------------------ Practice Set ---------------------------

CREATE TABLE TBL_PRODUCTS
(
	ID INT PRIMARY KEY IDENTITY,
	[NAME] NVARCHAR(50),
	[DESCRIPTION] NVARCHAR(250) 
)

CREATE TABLE TBL_PRODUCTSALES
(
	ID INT PRIMARY KEY IDENTITY,
	PRODUCTID INT FOREIGN KEY REFERENCES TBL_PRODUCTS(ID),
	UNITPRICE INT,
	QUALTITYSOLD INT
)

INSERT INTO TBL_PRODUCTS VALUES ('TV','52 INCH BLACK COLOR LCD TV')
INSERT INTO TBL_PRODUCTS VALUES ('LAPTOP','VERY THIIN BLACK COLOR ACER LAPTOP')
INSERT INTO TBL_PRODUCTS VALUES ('DESKTOP','HP HIGH PERFORMANCE DESKTOP')


INSERT INTO TBL_PRODUCTSALES VALUES (3,450,5)
INSERT INTO TBL_PRODUCTSALES VALUES (2,250,7)
INSERT INTO TBL_PRODUCTSALES VALUES (3,450,4)
INSERT INTO TBL_PRODUCTSALES VALUES (3,450,9)


SELECT *FROM TBL_PRODUCTS
SELECT *FROM TBL_PRODUCTSALES

-- TASK 01: FIND ID, Name descpriction of products which has not been sold

SELECT * FROM TBL_PRODUCTS WHERE TBL_PRODUCTS.ID NOT IN (SELECT DISTINCT(PRODUCTID) FROM TBL_PRODUCTSALES);

-- TASK 02: 

SELECT [NAME], (SELECT SUM(QUALTITYSOLD) FROM TBL_PRODUCTSALES WHERE PRODUCTID = TBL_PRODUCTS.ID) AS QTY
FROM TBL_PRODUCTS;

-- HOMETASK: SQ WITH FROM CLAUSE LEET CODE 1890.